---
interface Props {
  startDate: string;
  endDate: string;
  activities: Record<string, string[]>;
}

const { startDate, endDate, activities } = Astro.props;
const days = Array.from({ length: 5 }, (_, i) => {
  const date = new Date(startDate);
  date.setDate(date.getDate() + i);
  return date;
});
---

<div class="space-y-2">
  <h2 class="text-xl font-semibold text-indigo-700 mb-3">Itinerario</h2>

  <div class="grid grid-cols-5 gap-1.5">
    {
      days.map((date, index) => {
        const dateString = date.toISOString().split("T")[0];
        const isFirstDay = index === 0;
        return (
          <button
            class={`w-16 p-1 rounded-lg transition-colors text-sm ${
              isFirstDay
                ? "bg-indigo-700 text-white"
                : "bg-indigo-50 hover:bg-indigo-100 text-indigo-700"
            }`}
            onclick={`showActivities('${dateString}')`}
          >
            <div class="text-xs font-medium">
              {date.toLocaleDateString("es-ES", { weekday: "short" })}
            </div>
            <div class="text-base font-bold">{date.getDate()}</div>
          </button>
        );
      })
    }
  </div>
</div>

<script is:inline>
  function showActivities(date) {
    document.querySelectorAll(".day-activities").forEach((el) => {
      el.style.display = el.id === `activities-${date}` ? "block" : "none";
    });
  }
  // Mostrar primer dÃ­a por defecto
  document.addEventListener("DOMContentLoaded", () => {
    showActivities("${firstDay}");
  });
</script>
